spring:
  application:
    name: synclyrics
  jpa:
    defer-datasource-initialization: false
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:mysql://localhost:33060/synclyrics?createDatabaseIfNotExist=true&useSSL=false
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  liquibase:
    enabled: true
    drop-first: true
    change-log: classpath:db/changelog/changelog-master.xml
    default-schema: synclyrics
  cloud:
    openfeign:
      client:
        config:
          default:
            loggerLevel: full

logging:
  level:
    ru.sharphurt.synclyrics: DEBUG

lrclib:
  url: https://lrclib.net/api

frontend:
  url: ${FRONTEND_URL}

spotify:
  clientId: ${SPOTIFY_CLIENT_ID}
  clientSecret: ${SPOTIFY_CLIENT_SECRET}
  tokenUri: https://accounts.spotify.com/api/token
  authorizationUri: https://accounts.spotify.com/authorize
  baseUri: https://api.spotify.com/v1
  redirectUri: http://localhost:8080/callback
  grandType: authorization_code
  scopes: >
    ugc-image-upload,
    user-read-playback-state,
    user-modify-playback-state,
    user-read-currently-playing,
    streaming,
    app-remote-control,
    user-read-email,
    user-read-private,
    playlist-read-collaborative,
    playlist-modify-public,
    playlist-read-private,
    playlist-modify-private,
    user-library-modify,
    user-library-read,
    user-top-read,
    user-read-playback-position,
    user-read-recently-played,
    user-follow-read,
    user-follow-modify